To Do:
+
+ "more info" button with info about odd/even sides; make it a "slide-up" thingy like in google maps
+ Welcome screen
  - Add a note to accept geolocation request and how the site does not collect your location data (or you could collect it, and possibly monetize it somehow; maybe leverage for ads)
  - Move geolocation request to trigger after clicking "I Agree"
  - suggest portrait mode
+ fix label coloring in light mode
  - switch to just default to light Mode?
+ Side Nav
  - Press "esc" to close
  - Click outside of side nav to close
  - add a grey backdrop when it's open
+ new option in menu: display road labels only (default on)
+ GPS Accuracy Indicator
+ Twitter
  - fix weird "appception" bug
+ add a timeout; attempt to reload map; if no success after two 5-second timeouts, then warn user that connection is bad and let it try again with a longer timeout (you'll have to experiment with times)
+ add disclaimer, privacy policy, terms/user agreement etc.
  - Any parking signs override information found here. Do not solely rely on this application to determining where to park. You are ultimately responsible for parking properly so always have some situatioonal awareness of the sithuation. This app can only assist you in navigating Minneapolis's Snow Emergency System.   Dealing with the parking rules is no fun, but it allows the snow plows to do their job.
+ avoid dedicated application; see if notifications would be possible through browser or some other means
	- maybe even just direct them to signup for official mpls notifications
+ restrict map to mpls (both pan and geocode)
+ Add home button? - zooms to extent of Minneapolis
+ emergency status module
  - webhook to watch for snow emergencies
    + twitter? web crawler? both?
	- some safety check on the server side to make sure it is always accurate
	- Expand button to display more info (or put in menu?)
		- will not be declared after X:00 PM
		* general info like blue signs, the official rules/pictures from mpls, etc.

Immediately after MVP:
+ ads
+ donation/remove ads
+ incorporate cookies so that you don't have to request location every time

Non-MVP items:
+ multi-language support
+ change closeNav() functionality form stopVideo() -> pauseVideo()
+ add ability to switch basemap (non-mvp)
+ host your own tiles with postgis? (non-mvp)
+ menu button
	- settings w/ customization options (non-mvp)
	- feedback/bug report (non-mvp)
+ report that the road section has been plowed (non-mvp)
  - work with mpls to automatically show plowed roads?
+ auto location test (non-mvp)
	- check user location, have them confirm they are between the two blocks, and give them a thumbs up or thumbs download
	- extra disclaimer saying (we can't be 100% certain you are properly parked and cannot account for driveways, fire hydrants, etc.)
	- allow hide disclaimer in the future
+ "What if" button: what if an emergency was declared today" (non-mvp)
+ optimize geojson if possible (remove erroneous pts, etc. [non-mvp])
+ allow people to save bookmarked locations (non-mvp)
+ Use tow count data at http://opendata.minneapolismn.gov/search?tags=Snow%20Emergency to check if user is in a high ticket/tow area




For handling when users are not in city bounds:
sleep(500).then(() => {
  var outlat = false;
  if ((geolocate._lastKnownPosition.coords.latitude < 44.89015) || (geolocate._lastKnownPosition.coords.latitude > 45.05125)) {
    outlat = true;
  }
  var outlon = false;
  if ((geolocate._lastKnownPosition.coords.longitude < -93.32916) || (geolocate._lastKnownPosition.coords.longitude > -93.19386)) {
    outlon = true;
  }
  if (outlat || outlon) {
    map.fitBounds(city_boundary);
  }
  else {
      geolocate.trackUserLocation = true;
  }
});
